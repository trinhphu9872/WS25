@model WatchStore25.Models.ORDER_PRODUCT
@using WatchStore25.Models
@{
    ViewBag.Title = "Tạo Đơn";
    Layout = "~/Views/Shared/_Layout1.cshtml";
    string keyword = Request.QueryString["keyword"];
    @*    var cart = ViewBag.Cart as List<DETAIL_ORDER>;*@
    var cart = ViewBag.Cart as List<DETAIL_ORDER>;
}

<div class="container">
    <h1 class="row" style="font-size:60px">Checkout</h1>
    <div class="row" style="justify-content:space-between">
        <div style="flex-basis:55%">
            <h1 style="text-align:center; margin:20px">Thông Tin Khách Hàng</h1>
            @using (Html.BeginForm("Create", "bill", FormMethod.Post))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">

                    <hr />
                    <div class="form-group">
                        <label for="inputAddress" class="text-ti">Name</label>
                        <input type="text"
                               class="form-control text-form"
                               id="inputName" />
                    </div>
                    <div class="form-group ">
                        <label for="inputAddress" class="text-ti">Last Name</label>
                        <input type="text"
                               class="form-control text-form"
                               id="inputLastName" />
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-2 text-ti" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control text-form" } })
                            @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "control-label col-md-2 text-ti " })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control text-form" } })
                            @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.noteOrder, htmlAttributes: new { @class = "control-label col-md-2  text-ti" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.noteOrder, new { htmlAttributes = new { @class = "form-control text-form" } })
                            @Html.ValidationMessageFor(model => model.noteOrder, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.startDate, htmlAttributes: new { @class = "control-label col-md-2  text-ti" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.startDate, new { htmlAttributes = new { @class = "form-control text-form" } })
                            @Html.ValidationMessageFor(model => model.startDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.updateDate, htmlAttributes: new { @class = "control-label col-md-2 text-ti " })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.updateDate, new { htmlAttributes = new { @class = "form-control text-form" } })
                            @Html.ValidationMessageFor(model => model.updateDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10" style="width:300px; margin:auto">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>

            }
            <div class="backsite">
                @Html.ActionLink("Back to List", "Index", "ShoppingCart")
            </div>
        </div>
        <div class="col-4 " style="flex-basis:35%">
            <div class="card">
                <h1>Product</h1>
                <table>
                    <tr>
                        <th>Product</th>
                        <th>img</th>
                        <th>Total</th>
                    </tr>
                    @foreach (var item in cart)
                    {
                        <tr>
                            <a href="@Url.Action("ProductDetail", "Home", new {id= @item.PRODUCT.idProduct })">
                                <th class="blackDetail">@item.PRODUCT.name x @item.totalProduct</th>
                                <th class="blackDetail"><img src="@Url.Content("~/Content/Images/" + item.PRODUCT.img)" width="25%"   /></th>
                                <th class="blackDetail">@((item.PRODUCT.amount * item.totalProduct - (item.PRODUCT.amount * item.totalProduct * item.PRODUCT.tax / 100)).ToString()) vnđ</th>
                            </a>
                        </tr>
                    }
                    <tr>
                        <th>Total</th>
                        <th></th>
                        <th>@(cart.Sum(item=> (item.PRODUCT.amount * item.totalProduct - (item.PRODUCT.amount * item.totalProduct * item.PRODUCT.tax / 100))))</th>
                    </tr>

                </table>
            </div>
        </div>
    </div>
</div>


