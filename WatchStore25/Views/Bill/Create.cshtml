@model WatchStore25.Models.ORDER_PRODUCT
@using WatchStore25.Models
@{
    ViewBag.Title = "Tạo Đơn";
    Layout = "~/Views/Shared/_Layout1.cshtml";
    string keyword = Request.QueryString["keyword"];
@*    var cart = ViewBag.Cart as List<DETAIL_ORDER>;*@
var cart = ViewBag.Cart as List<DETAIL_ORDER>;
}

<div class="container">
    <h1 class="text-center">Checkout</h1>
    <div class="row">
        <div class="col-8 m-2">
            <h3>Thông Tin Khách Hàng</h3>
            @using (Html.BeginForm("Create", "bill", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <div class="form-group">
                    <label for="inputAddress">Name</label>
                    <input type="text"
                           class="form-control"
                           id="inputName"
                           placeholder="Name" />
                </div>
                <div class="form-group">
                    <label for="inputAddress">Last Name</label>
                    <input type="text"
                           class="form-control"
                           id="inputLastName"
                           placeholder="lastName" />
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                    </div>
                </div>
              
                <div>


                    <input type="submit" class="my-2 btn btn-danger" value="Tạo Đơn Hàng" />


                </div>
            }
        </div>
        <div class="col-4">
            <div class="card">
                <h1>Product</h1>
                <table>
                    <tr>
                        <th>Product</th>
                        <th>Total</th>
                    </tr>
                    @foreach (var item in cart)
                    {
                        <tr>
                            <a href="@Url.Action("ProductDetail", "Home", new {id= @item.PRODUCT.idProduct })">
                                <th>@item.PRODUCT.name x @item.totalProduct</th>
                                <th>@((item.PRODUCT.amount * item.totalProduct - (item.PRODUCT.amount * item.totalProduct * item.PRODUCT.tax / 100)).ToString()) vnđ</th>
                            </a>
                        </tr>
                    }
                    <tr>
                        <th>Total</th>
                        <th>@(cart.Sum(item=> (item.PRODUCT.amount * item.totalProduct - (item.PRODUCT.amount * item.totalProduct * item.PRODUCT.tax / 100))))</th>
                    </tr>

                </table>
            </div>
        </div>
    </div>
</div>



@*<h2>Create</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>ORDER_PRODUCT</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.idCustomer, "idCustomer", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("idCustomer", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.idCustomer, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.noteOrder, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.noteOrder, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.noteOrder, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.status, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.startDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.startDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.startDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.updateDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.updateDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.updateDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
*@
<div>
    @Html.ActionLink("Back to List", "Index", "ShoppingCart")
</div>
